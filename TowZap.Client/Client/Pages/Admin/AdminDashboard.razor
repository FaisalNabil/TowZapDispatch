@page "/admin/dashboard"
@inject IClientUserService UserService
@inject IJSRuntime JS
@attribute [Authorize(Roles = UserRoles.Administrator + "," + UserRoles.CompanyAdministrator)]

<h3 class="mb-4">Company Users</h3>

@if (users == null)
{
    <p>Loading users...</p>
}
else if (!users.Any())
{
    <p>No users found for your company.</p>
}
else
{
    <table class="table table-bordered table-striped">
        <thead class="table-dark">
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Role</th>
                <th>Active?</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.FullName</td>
                    <td>@user.Email</td>
                    <td>@user.PhoneNumber</td>
                    <td>@user.Role</td>
                    <td>@user.IsActive</td>
                    <td>
                        @if (user.Role == "GuestUser")
                        {
                            <button class="btn btn-sm btn-success me-2" @onclick="@(() => Promote(user.Id))">
                                Promote to Dispatcher
                            </button>
                        }
                        else
                        {
                            <span class="text-muted">-</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<UserSummaryDTO> users;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUsersByCompanyAsync();
    }

    private async Task Promote(string userId)
    {
        var success = await UserService.PromoteToDispatcherAsync(userId);
        if (success)
        {
            await JS.InvokeVoidAsync("toastr.success", "User promoted successfully!");
            users = await UserService.GetUsersByCompanyAsync(); // Refresh
        }
        else
        {
            await JS.InvokeVoidAsync("toastr.error", "Promotion failed.");
        }
    }
}
