@page "/dispatcher/dashboard"
@inject IClientJobRequestService JobRequestService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@attribute [Authorize(Roles = UserRoles.Dispatcher)]

<div class="container-fluid mt-4 px-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold"><i class="bi bi-truck"></i> Dispatched Jobs</h2>
        <button class="btn btn-success" @onclick="CreateNewJob">
            <i class="bi bi-plus-circle me-1"></i> Create New Job
        </button>
    </div>

    @if (jobs == null)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!jobs.Any())
    {
        <div class="alert alert-info">No dispatched jobs found.</div>
    }
    else
    {
        <!-- Desktop Table -->
        <div class="card shadow-sm d-none d-md-block">
            <div class="card-body table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th class="text-nowrap">Job ID</th>
                            <th>Caller</th>
                            <th class="d-none d-md-table-cell">Vehicle</th>
                            <th>Status</th>
                            <th class="d-none d-md-table-cell">Created At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var job in jobs)
                        {
                            <tr>
                                <td class="text-nowrap"><code>@job.Id.ToString().Substring(0, 8)</code></td>
                                <td>@job.CallerName</td>
                                <td class="d-none d-md-table-cell">@job.Make @job.Model (@job.PlateNumber)</td>
                                <td><span class="badge bg-info">@job.Status</span></td>
                                <td class="d-none d-md-table-cell">@job.CreatedAt.ToString("g")</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewDetails(job.Id)">
                                        <i class="bi bi-eye"></i> View
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Mobile Card View -->
        <div class="d-block d-md-none">
            @foreach (var job in jobs)
            {
                <div class="card mb-3 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title mb-2">
                            <i class="fas fa-car me-2"></i>@job.Make @job.Model
                        </h5>
                        <p class="mb-1"><strong>Caller:</strong> @job.CallerName</p>
                        <p class="mb-1"><strong>Plate:</strong> @job.PlateNumber</p>
                        <p class="mb-1"><strong>Status:</strong> <span class="badge bg-info">@job.Status</span></p>
                        <p class="mb-2"><strong>Created:</strong> @job.CreatedAt.ToString("g")</p>

                        <button class="btn btn-sm btn-outline-primary w-100" @onclick="() => ViewDetails(job.Id)">
                            <i class="bi bi-eye"></i> View Details
                        </button>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<JobResponseDTO> jobs;

    protected override async Task OnInitializedAsync()
    {
        jobs = await JobRequestService.GetJobsForDispatcherAsync();
    }

    private void CreateNewJob()
    {
        Navigation.NavigateTo("/dispatcher/job/create");
    }

    private void ViewDetails(Guid jobId)
    {
        Navigation.NavigateTo($"/dispatcher/job/{jobId}");
    }
}
