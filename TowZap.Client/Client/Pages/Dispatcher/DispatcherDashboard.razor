@page "/dispatcher/dashboard"
@inject IClientJobRequestService JobRequestService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@attribute [Authorize(Roles = UserRoles.Dispatcher)]

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold"><i class="bi bi-truck"></i> Dispatched Jobs</h2>
        <button class="btn btn-success" @onclick="CreateNewJob">
            <i class="bi bi-plus-circle me-1"></i> Create New Job
        </button>
    </div>

    @if (jobs == null)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!jobs.Any())
    {
        <div class="alert alert-info">No dispatched jobs found.</div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-body table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>Job ID</th>
                            <th>Caller</th>
                            <th>Vehicle</th>
                            <th>Status</th>
                            <th>Created At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var job in jobs)
                        {
                            <tr>
                                <td><code>@job.Id.ToString().Substring(0, 8)</code></td>
                                <td>@job.CallerName</td>
                                <td>@job.Make @job.Model (@job.PlateNumber)</td>
                                <td>
                                    <span class="badge bg-info">@job.Status</span>
                                </td>
                                <td>@job.CreatedAt.ToString("g")</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewDetails(job.Id)">
                                        <i class="bi bi-eye"></i> View
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    private List<JobResponseDTO> jobs;

    protected override async Task OnInitializedAsync()
    {
        jobs = await JobRequestService.GetJobsForDispatcherAsync();
    }

    private void CreateNewJob()
    {
        Navigation.NavigateTo("/dispatcher/job/create");
    }

    private void ViewDetails(Guid jobId)
    {
        Navigation.NavigateTo($"/dispatcher/job/{jobId}");
    }
}
