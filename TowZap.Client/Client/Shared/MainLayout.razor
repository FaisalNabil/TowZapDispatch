@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@inject UserContext UserContext
@inject AuthenticationStateProvider AuthProvider
@inject TowZap.Client.Client.Service.IAuthService AuthService

@if (string.IsNullOrWhiteSpace(UserContext.Role))
{
    <div class="text-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="d-flex">
        <!-- Sidebar -->
        <div class="bg-light p-3 border-end" style="width: 250px; min-height: 100vh;">
            <h5 class="mb-4">TowZap</h5>
            <ul class="nav flex-column">
                @switch (UserContext.Role)
                {
                    case UserRoles.Administrator:
                    case UserRoles.CompanyAdministrator:
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/dashboard">Admin Dashboard</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/users">Manage Users</a>
                        </li>
                        break;

                    case UserRoles.Dispatcher:
                        <li class="nav-item">
                            <a class="nav-link" href="/dispatcher/jobs">Job Assignments</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/dispatcher/map">Live Map</a>
                        </li>
                        break;

                    case UserRoles.Driver:
                        <li class="nav-item">
                            <a class="nav-link" href="/driver/myjob">My Job</a>
                        </li>
                        break;

                    case UserRoles.GuestUser:
                        <li class="nav-item">
                            <a class="nav-link" href="/guest/request">New Request</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/guest/status">Track Driver</a>
                        </li>
                        break;
                }
                <li class="nav-item mt-3">
                    <button class="btn btn-outline-danger w-100" @onclick="Logout">Logout</button>
                </li>
            </ul>
        </div>

        <!-- Main Content -->
        <div class="flex-grow-1 p-4">
            @Body
        </div>
    </div>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(UserContext.Role))
        {
            var state = await AuthProvider.GetAuthenticationStateAsync();
            var user = state.User;

            if (user.Identity?.IsAuthenticated == true)
            {
                UserContext.FullName = user.FindFirst("name")?.Value;
                UserContext.Role = user.FindFirst(ClaimTypes.Role)?.Value;
                UserContext.CompanyId = Guid.TryParse(user.FindFirst("CompanyId")?.Value, out var cid)
                    ? cid : Guid.Empty;
            }
        }
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        await LocalStorage.RemoveItemAsync("authToken");
        UserContext.Clear();
        Navigation.NavigateTo("/login", forceLoad: true);
    }
}
